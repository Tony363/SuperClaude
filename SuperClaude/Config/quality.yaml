# SuperClaude Framework Quality Scoring Configuration
# Version: 6.0.0-alpha

dimensions:
  correctness:
    weight: 0.25
    description: Code works as intended
    metrics:
      - passes_tests
      - no_runtime_errors
      - expected_output

  completeness:
    weight: 0.20
    description: All requirements addressed
    metrics:
      - feature_coverage
      - edge_cases_handled
      - documentation_complete

  performance:
    weight: 0.10
    description: Efficiency and optimization
    metrics:
      - time_complexity
      - space_complexity
      - resource_usage

  maintainability:
    weight: 0.10
    description: Code clarity and structure
    metrics:
      - readability
      - modularity
      - naming_conventions

  security:
    weight: 0.10
    description: Security best practices
    metrics:
      - input_validation
      - authentication
      - data_protection

  scalability:
    weight: 0.10
    description: Growth capability
    metrics:
      - architectural_patterns
      - database_design
      - caching_strategy

  testability:
    weight: 0.10
    description: Test coverage and quality
    metrics:
      - unit_test_coverage
      - integration_tests
      - test_quality

  usability:
    weight: 0.05
    description: User experience quality
    metrics:
      - ui_consistency
      - error_messages
      - accessibility

# Scoring Configuration
scoring:
  algorithm: weighted-average
  scale: 0-100

  thresholds:
    excellent: 90
    good: 70
    acceptable: 50
    poor: 30
    failing: 0

  auto_actions:
    below_70:
      action: iterate
      max_iterations: 5
      improvement_target: 70

    below_50:
      action: delegate
      delegate_to: quality-engineer
      escalate: true

    above_90:
      action: approve
      fast_track: true
      skip_review: false

# Validation Gates
validation:
  pre_execution:
    enabled: true
    checks:
      - syntax_validation
      - dependency_check
      - security_scan

  post_execution:
    enabled: true
    checks:
      - test_execution
      - performance_metrics
      - code_coverage

  continuous:
    enabled: true
    interval: 300
    checks:
      - resource_monitoring
      - error_tracking
      - quality_trends

# Improvement Strategies
improvement:
  strategies:
    refactoring:
      trigger: maintainability < 60
      actions:
        - extract_methods
        - rename_variables
        - simplify_logic

    optimization:
      trigger: performance < 60
      actions:
        - algorithm_improvement
        - caching_implementation
        - query_optimization

    security_hardening:
      trigger: security < 70
      actions:
        - input_sanitization
        - authentication_upgrade
        - encryption_implementation

    test_enhancement:
      trigger: testability < 70
      actions:
        - add_unit_tests
        - add_integration_tests
        - improve_test_quality